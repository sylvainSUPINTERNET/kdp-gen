from typing import List
import ebooklib
from ebooklib import epub
import uuid
import epubcheck

class Book(object):

    def __init__( self, book: epub.EpubBook, author:str, title:str, generated_content:List[str], language:str = "fr"):
        self.book = book
        self.language = language
        self.author = author
        self.title = title;
        
        # Text generated by the GPT model clean up
        self.generated_content = [t.strip() for t in generated_content]
        
    
    def add_metadata(self):
        self.book.set_identifier(str(uuid.uuid4()))
        self.book.set_title(self.title)
        self.book.set_language(self.language)
        self.book.add_author(self.author)
        
        return self

    
    def add_chapter(self):
        
        self.book.spine.append("nav")
        
        for idx, c in enumerate(self.generated_content):
            chapter = epub.EpubHtml(title=f"{str(uuid.uuid4())}", file_name=f"chap{idx+1}.xhtml", lang=self.language)
            chapter.content = (
                f"<p>{c}</p>"
            )
            self.book.add_item(chapter)
            
            # Update TOC
            self.book.toc.append(
                epub.Link(f"chap{idx+1}.xhtml", f"Chapter {idx+1}", f"chap{idx+1}"),
            )
            self.book.toc.append(
                (epub.Section("Subchapter 1"), (epub.Link(f"chap{idx+1}.xhtml", f"Subchapter 1", f"chap{idx+1}"),))
            )
            
            
            self.book.spine.append(chapter)
         
        # Navigation
        self.book.add_item(epub.EpubNcx())  
        self.book.add_item(epub.EpubNav())
    
        return self
    
    
    def add_page_cover(self):
        # Create new HTML page
        page = epub.EpubHtml(title="te", file_name=f'{"te"}.xhtml', lang='en')
        
        # Add image to EPUB book
        # epub_image = epub.EpubItem(uid=f'{"te"}-image', file_name=f'{"img"}.png', media_type='image/png', content=open("./img.png", 'rb').read())
        epub_image_bg = epub.EpubItem(uid=f'{"te"}-image2', file_name=f'{"img"}.jpg', media_type='image/jpeg', content=open("./img.jpg", 'rb').read())
        # self.book.add_item(epub_image)
        self.book.add_item(epub_image_bg)
        
        css_item = epub.EpubItem(uid="style.css", file_name="style.css", media_type="text/css", content="html  { background-image: url('./img.jpg'); background-size: cover;background-repeat: no-repeat; }")
        self.book.add_item(css_item)
        page.add_link(href="style.css", rel="stylesheet", type="text/css")

        # Add image and text to HTML page
        # page.content = f'<div style="text-align:center"><img src="{epub_image.file_name}" alt="{"pn"}"/><p>{"caption"}</p></div>'
        page.content = f'<div style=""><p>heaaaa</p></div>'
        
        
        self.book.add_item(page)
        
        self.book.toc.append(epub.Link(page.file_name, "Cover Page", "Cover"))

        
        # Add page to book spine
        self.book.spine.append(page)
        
        return self
    
    def write_book(self):
        # write to the file
        epub.write_epub("test.epub", self.book, {})
        print("Book generated")
        


